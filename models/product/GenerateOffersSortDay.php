<?php namespace Drabbit\Avito\Models\Product;


use Drabbit\Avito\Controllers\Products;
use Drabbit\Avito\Models\Offer;
use Drabbit\Avito\Models\Offer\FilterConfig;

class GenerateOffersSortDay extends GenerateOffers
{
    private $intervalProduct;
    private $productDateTimeSortDayList = null;

    public function run()
    {
        ini_set('max_execution_time', 900); // Увеличим время ожидания загрузки
        parent::run(); // TODO: Change the autogenerated stub
        $this->addIntervalInDateTimeProduct();

        $this->validateTimeStampForRelevance();
        ini_set('max_execution_time', 30); // default

    }

    protected function configInterval()
    {
        // Интервал выпуска продукта(в минутах)
        $this->intervalProduct = new \DateInterval('PT'.$this->layout->interval_minutes.'M');
        // Интервал выпуска Офферы
        $this->intervalOffer = new \DateInterval('P'.$this->layout->interval_days.'D');
    }

    public function addProductDateTimeList()
    {
        $productLayoutId = $this->layout->id;
        $productId = $this->product->id;
        if(is_null($this->productDateTimeSortDayList)) {
            // получаем дату начала из модели "Шаблоны"
            $this->productDateTimeSortDayList[$productLayoutId][$productId] = $this->dateTime;
        }
        elseif(array_key_exists($productLayoutId, $this->productDateTimeSortDayList) and
            !array_key_exists($productId, $this->productDateTimeSortDayList[$productLayoutId])) {
            $key = array_key_last($this->productDateTimeSortDayList[$productLayoutId]);
            $time = $this->productDateTimeSortDayList[$productLayoutId][$key];
            $this->productDateTimeSortDayList[$productLayoutId][$productId] = $this->dateTime->setTimeFrom($time);
        }

        $this->dateTime = $this->productDateTimeSortDayList[$productLayoutId][$productId];
        $this->endAt = $this->dateTime->copy()->addMonth();

        return $this;
    }

    protected function addIntervalInDateTimeProduct()
    {
        $this->dateTime->add($this->intervalProduct);
    }

    protected function addIntervalInDateTimeOffer()
    {
        $this->dateTime->add($this->intervalOffer);
        $this->endAt->add($this->intervalOffer);
        $this->validateTimeStampForRelevance();
    }
}